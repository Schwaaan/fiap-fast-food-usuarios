// <auto-generated />
using System;
using FourSix.Controllers.Gateways.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FourSix.Controllers.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240726182833_EditAgenda")]
    partial class EditAgenda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FourSix.Domain.Entities.AgendaAggregate.Agenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAgenda")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("Agenda", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("78e3b8d0-be9a-4407-9304-c61788797808"),
                            DataAgenda = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MedicoId = new Guid("fdd632ff-6852-4e89-9a1a-b8c16fb54b8b")
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.AgendaAggregate.AgendaHorario", b =>
                {
                    b.Property<Guid>("AgendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraFim")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgendaId", "HoraInicio");

                    b.ToTable("AgendaHorario", (string)null);

                    b.HasData(
                        new
                        {
                            AgendaId = new Guid("78e3b8d0-be9a-4407-9304-c61788797808"),
                            HoraInicio = new DateTime(2024, 8, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraFim = new DateTime(2024, 8, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Disponível"
                        },
                        new
                        {
                            AgendaId = new Guid("78e3b8d0-be9a-4407-9304-c61788797808"),
                            HoraInicio = new DateTime(2024, 8, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraFim = new DateTime(2024, 8, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Disponível"
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.MedicoAggregate.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Medico", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fdd632ff-6852-4e89-9a1a-b8c16fb54b8b"),
                            Crm = "1234",
                            Especialidade = "Pediatra",
                            Nome = "Dr. Jorge Mendoza"
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PacienteAggregate.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Paciente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("717b2fb9-4bbe-4a8c-8574-7808cd652e0b"),
                            Cpf = "12851671049",
                            Email = "joao.silva@gmail.com",
                            Nome = "João da Silva Gomes"
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.AgendaAggregate.Agenda", b =>
                {
                    b.HasOne("FourSix.Domain.Entities.MedicoAggregate.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("FourSix.Domain.Entities.AgendaAggregate.AgendaHorario", b =>
                {
                    b.HasOne("FourSix.Domain.Entities.AgendaAggregate.Agenda", null)
                        .WithMany("Horarios")
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FourSix.Domain.Entities.AgendaAggregate.Agenda", b =>
                {
                    b.Navigation("Horarios");
                });
#pragma warning restore 612, 618
        }
    }
}
